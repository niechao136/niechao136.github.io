import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.DK1-H3E1.js";const p="/assets/architecture.DwgVjlVY.svg",l="/assets/tool.CGTQnTzv.png",h="/assets/add_tool.Bzi4puNX.png",e="/assets/tool_list.CP3dGVkM.png",k="/assets/agent_tool.BDlHGD_C.png",r="/assets/agent_answer.CpCDENfX.png",d="/assets/flow_tool.Db46Z58J.png",o="/assets/flow_setting.BHd76YhG.png",E="/assets/flow_active.BiDn-De2.png",g="/assets/flow_save.C_taxF-s.png",c="/assets/flow_copy.rX_sc1bY.png",F="/assets/mcp_server.sQWNk5ty.png",D=JSON.parse('{"title":"MCP 学习笔记","description":"记录 MCP 的学习笔记","frontmatter":{"title":"MCP 学习笔记","date":"2025-07-21T00:00:00.000Z","tags":["Dify","MCP"],"description":"记录 MCP 的学习笔记"},"headers":[],"relativePath":"posts/2025/2025072101/index.md","filePath":"posts/2025/2025072101/index.md"}'),y={name:"posts/2025/2025072101/index.md"};function C(u,s,m,_,B,f){return t(),a("div",null,s[0]||(s[0]=[n('<h1 id="mcp-学习笔记" tabindex="-1">MCP 学习笔记 <a class="header-anchor" href="#mcp-学习笔记" aria-label="Permalink to &quot;MCP 学习笔记&quot;">​</a></h1><h2 id="一、mcp概述" tabindex="-1">一、MCP概述 <a class="header-anchor" href="#一、mcp概述" aria-label="Permalink to &quot;一、MCP概述&quot;">​</a></h2><h3 id="mcp-简介" tabindex="-1">MCP 简介 <a class="header-anchor" href="#mcp-简介" aria-label="Permalink to &quot;MCP 简介&quot;">​</a></h3><p><strong>Model Context Protocol（MCP）</strong> 是一个开放协议，标准化了应用程序如何向大型语言模型（LLM）提供上下文。它就像 AI 世界的 USB-C 接口，使不同的客户端和数据源/工具之间能无缝连接。</p><h3 id="mcp-架构" tabindex="-1">MCP 架构 <a class="header-anchor" href="#mcp-架构" aria-label="Permalink to &quot;MCP 架构&quot;">​</a></h3><p>MCP 使用客户端-服务器架构：</p><p><img src="'+p+`" alt="MCP 架构图"></p><ul><li>MCP Host：如 Claude 桌面应用、IDE 或 AI 工具</li><li>MCP Client：连接 MCP 服务器的客户端协议</li><li>MCP Server：通过<strong>标准协议</strong>暴露能力的小型服务</li><li>本地资源：本机上的文件、数据库、服务</li><li>远程服务：互联网上的 API 等外部系统</li></ul><h3 id="核心组件" tabindex="-1">核心组件 <a class="header-anchor" href="#核心组件" aria-label="Permalink to &quot;核心组件&quot;">​</a></h3><ol><li><p>Protocol 层（协议层）</p><p>负责高层通信逻辑：请求/响应、通知、消息解析等。</p></li><li><p>Transport 层（传输层）</p><p>用于 Client ↔ Server 间的底层通信，支持两种机制：</p><ul><li>Stdio: 本地进程通信，适合桌面/插件类应用</li><li>Streamable HTTP: 远程通信，支持 HTTP POST + Server-Sent Events（SSE）</li></ul><p>所有传输统一使用 JSON-RPC 2.0 协议格式。</p></li></ol><h3 id="mcp-server" tabindex="-1">MCP Server <a class="header-anchor" href="#mcp-server" aria-label="Permalink to &quot;MCP Server&quot;">​</a></h3><ul><li><p>Tool：供模型调用的功能接口</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 工具定义结构</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 工具名（唯一）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 描述信息（可选）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  inputSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参数结构</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  annotations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 工具行为提示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Resource：供模型读取的上下文数据</p></li><li><p>Prompt：提示词模板</p></li><li><p>Sampling：模型生成参数（如 temperature）</p></li><li><p>Elicitation：组合资源与提示词生成最终输入</p></li><li><p>Root：大模型调用入口节点</p></li></ul><h3 id="mcp-client" tabindex="-1">MCP Client <a class="header-anchor" href="#mcp-client" aria-label="Permalink to &quot;MCP Client&quot;">​</a></h3><ul><li>工具发现：发送 tools/list 请求获取当前可用工具列表</li><li>工具调用：使用 tools/call 请求调用指定工具</li></ul><h2 id="二、dify-1-6-使用-mcp" tabindex="-1">二、Dify 1.6 使用 MCP <a class="header-anchor" href="#二、dify-1-6-使用-mcp" aria-label="Permalink to &quot;二、Dify 1.6 使用 MCP&quot;">​</a></h2><h3 id="添加-mcp-类型的工具" tabindex="-1">添加 MCP 类型的工具 <a class="header-anchor" href="#添加-mcp-类型的工具" aria-label="Permalink to &quot;添加 MCP 类型的工具&quot;">​</a></h3><p>点击工具tab，选择MCP，就可以看到添加 MCP 服务按钮</p><p><img src="`+l+'" alt="添加 MCP 服务"></p><p>例如，可以引入高德地图的 MCP Server，更多 MCP 可以参考 <a href="https://www.modelscope.cn/mcp" target="_blank" rel="noreferrer">MCP 广场</a></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://mcp.amap.com/mcp?key=您在高德官网上申请的key</span></span></code></pre></div><p>填入 URL 后，可以自定义名称、图标以及标识</p><p><img src="'+h+'" alt="添加 MCP 工具"></p><p>之后点击添加并授权，dify 会自动识别到该 MCP Server 下所有的工具</p><p><img src="'+e+'" alt="工具列表"></p><h3 id="dify-中使用-mcp-server" tabindex="-1">Dify 中使用 MCP Server <a class="header-anchor" href="#dify-中使用-mcp-server" aria-label="Permalink to &quot;Dify 中使用 MCP Server&quot;">​</a></h3><ol><li><p>Agent 中使用</p><p>在工具栏中添加需要的工具 <img src="'+k+'" alt="Agent 工具"></p><p>之后向 Agent 提问天气相关问题，Agent 就会自动调用 maps_weather 工具，并且根据工具返回内容回答问题 <img src="'+r+'" alt="Agent 工具"></p></li><li><p>Chatflow 或者 Workflow 中使用</p><p>点击添加节点，选择工具，选择MCP，之后就可以选择某一个工具作为工作流中的节点 <img src="'+d+'" alt="工作流节点"></p></li></ol><h3 id="将-dify-中的工作流发布为-mcp-server" tabindex="-1">将 Dify 中的工作流发布为 MCP Server <a class="header-anchor" href="#将-dify-中的工作流发布为-mcp-server" aria-label="Permalink to &quot;将 Dify 中的工作流发布为 MCP Server&quot;">​</a></h3><p>首先需要先发布工作流，之后点击左侧编排上方的设置区域 <img src="'+o+'" alt="工作流节点"></p><p>接着点击 MCP 服务右侧的开关 <img src="'+E+'" alt="工作流节点"></p><p>然后填写服务描述和参数描述，之后点击启用按钮就成功启用 MCP 服务了 <img src="'+g+'" alt="工作流节点"></p><p>最后复制服务 URL，就可以在 Cursor 等其他 AI 工具中使用这个 MCP 服务了 <img src="'+c+`" alt="工作流节点"></p><h2 id="三、开发-mcp-server" tabindex="-1">三、开发 MCP Server <a class="header-anchor" href="#三、开发-mcp-server" aria-label="Permalink to &quot;三、开发 MCP Server&quot;">​</a></h2><p>首先创建一个 FastMCP： 注意，stateless_http 应设为 True，否则，会报错误：Bad Request: Missing session ID； host 应设为 0.0.0.0 否则默认的 127.0.0.1 只有本地能访问到。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mcp.server.fastmcp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FastMCP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Init</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mcp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FastMCP(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weather&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">stateless_http</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>之后，定义一个 tool get_forecast</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@mcp.tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_forecast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(latitude: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, longitude: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;Get weather forecast for a location.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Args:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        latitude: Latitude of the location</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        longitude: Longitude of the location</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # First get the forecast grid endpoint</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    points_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{NWS_API_BASE}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/points/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">latitude</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">longitude</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    points_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make_nws_request(points_url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> points_data:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Unable to fetch forecast data for this location.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Get the forecast URL from the points response</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    forecast_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> points_data[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;properties&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;forecast&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    forecast_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make_nws_request(forecast_url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> forecast_data:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Unable to fetch detailed forecast.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Format the periods into a readable forecast</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    periods </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> forecast_data[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;properties&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;periods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    forecasts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> period </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> periods[:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Only show next 5 periods</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        forecast </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">°</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;temperatureUnit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Wind: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;windSpeed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;windDirection&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Forecast: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;detailedForecast&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        forecasts.append(forecast)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">---</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.join(forecasts)</span></span></code></pre></div><p>最后，启动 FastMCP，注意，transport 应设为 streamable-http，stdio 无法产生服务 URL。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Initialize and run the server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mcp.run(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;streamable-http&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>运行效果如图： <img src="`+F+'" alt="运行效果"></p>',39)]))}const P=i(y,[["render",C]]);export{D as __pageData,P as default};
